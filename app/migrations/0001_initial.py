# Generated by Django 2.1.5 on 2019-08-19 06:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(max_length=30)),
                ('iin', models.IntegerField(null=True)),
                ('school', models.CharField(max_length=50)),
                ('rating', models.IntegerField(null=True)),
                ('avatar', models.ImageField(default='image/avatar/default.png', null=True, upload_to='image/avatar/')),
                ('status', models.SmallIntegerField(choices=[(0, 'admin'), (1, 'teacher'), (2, 'student')], null=True)),
                ('major', models.CharField(max_length=60, null=True)),
                ('teacher', models.CharField(max_length=60, null=True)),
                ('language', models.CharField(max_length=2, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CourseData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer', models.CharField(max_length=100, null=True)),
                ('duration', models.CharField(max_length=100, null=True)),
                ('certificate', models.CharField(max_length=100, null=True)),
                ('time', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Curs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('video', models.FileField(default='default.mp4', null=True, upload_to='videos/curs/')),
                ('image', models.ImageField(default='image/curs/default.png', null=True, upload_to='image/curs/')),
                ('number_lessons', models.SmallIntegerField(blank=True)),
                ('language', models.CharField(max_length=2, null=True)),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курс',
            },
        ),
        migrations.CreateModel(
            name='Curs_Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_lesson', models.SmallIntegerField(blank=True)),
                ('teacher', models.SmallIntegerField(null=True)),
                ('test_status', models.SmallIntegerField(null=True)),
                ('curs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Curs')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True)),
                ('text_teacher', models.TextField(null=True)),
                ('curs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Curs')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCourses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_id', models.SmallIntegerField(null=True)),
                ('curs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Curs')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('ask', models.TextField()),
                ('answer1', models.CharField(max_length=250)),
                ('answer2', models.CharField(max_length=250)),
                ('answer3', models.CharField(max_length=250)),
                ('answer4', models.CharField(max_length=250)),
                ('answer5', models.CharField(max_length=250)),
                ('correct_answer', models.SmallIntegerField(choices=[(1, '1-ші жауап дұрыс'), (2, '2-ші жауап дұрыс'), (3, '3-ші жауап дұрыс'), (4, '4-ші жауап дұрыс'), (5, '5-ші жауап дұрыс')])),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Lessons')),
            ],
        ),
        migrations.CreateModel(
            name='Test_Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_test', models.CharField(max_length=100)),
                ('points', models.SmallIntegerField()),
                ('all_points', models.SmallIntegerField()),
                ('lesson', models.SmallIntegerField()),
                ('curs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Curs')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video_lessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(default='default.mp4', null=True, upload_to='videos/lessons')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Lessons')),
            ],
        ),
        migrations.AddField(
            model_name='hint',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Lessons'),
        ),
        migrations.AddField(
            model_name='coursedata',
            name='curs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Curs'),
        ),
    ]
